// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Utilisateur {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String
  gamesWon Int @default(0)
  gameLost Int @default(0)
  avatar String?
  email    String @unique
  friends  Friendship[] @relation("UserToFriendship")
  friendOf  Friendship[]  @relation("FriendToFriendship")
}
model chatRoom {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique
  
}

model Friendship {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user       Utilisateur @relation("UserToFriendship", fields: [userId], references: [id]) // Relation to Utilisateur model
  userId     Int
  friend     Utilisateur @relation("FriendToFriendship", fields: [friendId], references: [id]) // Different relation name
  friendId   Int
}










// model User {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   email String @unique
//   hash String

//   firstName String?
//   lastName String?
  
//   bookmarks Bookmark[]

//   @@map("users")
// }
// model Bookmark {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   title String
//   description String?
//   link String

//   userId Int
//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
//   //on delete cascade

//   @@map("bookmarks")
// }