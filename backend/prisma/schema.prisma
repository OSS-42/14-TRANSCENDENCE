// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String
  gamesWon Int @default(0)
  gameLost Int @default(0)
  avatar String?
  email    String @unique

  friends  Friendship[] @relation("UserToFriendship")
  friendOf  Friendship[]  @relation("FriendToFriendship")

  ownedChatRooms  ChatRoom[]   @relation("ChatRoomOwner")
  memberChatRooms ChatRoom[]   @relation("ChatRoomMembers")
  moderatorChatRooms ChatRoom[] @relation("ChatRoomModerators")
  bannedChatRooms ChatRoom[]    @relation("ChatRoomBannedUsers")
}

model ChatRoom {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique
  hash String?
  invite Boolean
  owner       Utilisateur  @relation("ChatRoomOwner", fields: [ownerId], references: [id])
  ownerId     Int
 
  members           Utilisateur[] @relation("ChatRoomMembers")
  moderators        Utilisateur[] @relation("ChatRoomModerators")
  bannedUsers       Utilisateur[] @relation("ChatRoomBannedUsers")
}

model Friendship {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user       Utilisateur @relation("UserToFriendship", fields: [userId], references: [id]) 
  userId     Int
  friend     Utilisateur @relation("FriendToFriendship", fields: [friendId], references: [id]) 
  friendId   Int
}



//match history





